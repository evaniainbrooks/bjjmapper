- meta_description = user.seo_title
- if user.locations.count > 0
  meta_description = meta_description + ". #{user.locations.collect(&:title).to_sentence}"

= meta_tag(:description, meta_description)
= meta_tag(:keywords, "#{user.full_name}, BJJ #{user.descriptive_rank_in_words}, BJJ Lineage, BJJ Belt Ranks, Jiu-Jitsu Ranks, #{user.full_name} Students, #{user.full_name} Biography")

= content_for(:title) do
  = user.seo_title

.container.page.show-user
  = form_for(user, html: { class: 'form ' + edit_mode_classes }) do |f|
    .row
      .col-md-10
        = render partial: 'breadcrumb', locals: { user: user }
      .col-md-2.text-right
        = render partial: 'edit_controls', locals: { user: user }
    = render partial: 'welcome_message' if welcome?
    = render partial: 'create_message' if created?
    .row
      .col-md-3
        .display-field
          %img.profile.center-block{:src => user.image}
        .edit-field.edit-image-container
          %div.thumbnail-overlay
            %span.text-info.upcase Thumbnail
          %img.profile.center-block.edit-image{:src => user.image}
          %br/
          %input{:'data-url' => upload_image_user_path(user), :'data-upload-avatar' => true, :type => 'file', :class => 'input-md form-control'}/
          - if user.image?
            %input{:'data-url' => remove_image_user_path(user), :'data-clear-avatar' => true, :type => 'button', :value => 'Remove Image', :class => 'btn btn-default btn-small btn-block'}/
      .col-md-6
        = render partial: 'users/table', locals: { :f => f, :user => user }
        = render partial: 'users/edit_table', locals: { :f => f, :user => user, :show_biography => true }
      .col-md-3
        - if own_profile?
          = render partial: 'profile_actions', locals: { :f => f }
        - else
          = render partial: 'actions'
        - if user.locations.present?
          %br/
          %br/
          %h3 Teaching at
          %ul.list-unstyled
            - user.locations.each_with_index do |location, i|
              %li= render partial: 'locations/card', object: location, as: 'location', locals: { location_counter: i }
    - if !current_user.anonymous?
      %hr.clear/
      .row
        - if own_profile? || user.flag_display_reviews?
          .col-md-4.reviews
            %h3
              Reviews
              - unless user.flag_display_reviews?
                %small
                  %i Not displayed publicly
            .items.clear
            .empty-message
              %i.text-muted This person has not written any reviews
        .col-md-8
          %h3
            %span.fa.fa-calendar
            Schedule
          = render partial: 'users/schedule'
        -# if user.favorite_locations.present?
          .col-md-4
            %h3 Favorite Academies
            %ul.list-unstyled
              - user.favorite_locations.each_with_index do |location, i|
                %li= render partial: 'locations/card', object: location, as: 'location', locals: { location_counter: i }
      %hr/
      .row
        .col-md-12.students
          %h3.pull-left Students
          %button.pull-right.edit-field.btn.btn-small.btn-default.add-student{:style => 'margin-top: -5px', :type => 'button'}
            %i.fa.fa-plus-circle
            Add Student
          .row.items.clear
          .empty-message
            %i.text-muted No students are listed for this person
      %hr.edit-field/
      .row.edit-field
        .col-md-12
          .pull-right
            %button.delete-field.btn.btn-danger.btn-md{:type => 'button',
              :data => { :method => :delete,
                         :url => user_path(user),
                         :title => 'Are you sure you want to delete this user?',
                         :body => "You are performing this action as <b>#{current_user.try(:name)}</b>. Press 'Confirm' to permanently delete this user. Note that this action cannot be un-done." } }
              %i.fa.fa-trash
              Delete User
            %button.btn.btn-default.btn-md{:type => 'button', 'data-cancel-edit' => true} Cancel Editing
            %button.btn.btn-primary.btn-md{:type => 'submit'} Save Changes

  = render :partial => 'users/add_student_dialog', locals: { instructor: user }
= content_for(:scripts) do
  = javascript_include_tag 'calendar'
  :coffeescript
    $(document).ready ->
      model = new RollFindr.Models.User(#{render_json(user)})
      view = new RollFindr.Views.UserShowView({model: model})
