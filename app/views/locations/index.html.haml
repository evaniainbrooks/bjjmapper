- seo_name = [@criteria[:city], @criteria[:country]].compact.join(", ")
= content_for :title do
  = locations.present? ? "Brazilian Jiu-Jitsu Academies in #{seo_name}" : "Brazilian Jiu-Jitsu Academy Directory"

.container.page
  .row
    .col-md-12
      %h1
        Brazilian Jiu-Jitsu Academy Directory
        - if locations.blank?
          %span.small= "#{Location.count} academies worldwide"
  .row
    .col-md-10
      %ol.breadcrumb
        %li
          %a{href: root_path} Home
        %li
          %a{href: directory_index_path, title: 'Brazilian Jiu-Jitsu gym listings'} BJJ Academy Directory 
        - if (@criteria.has_key?(:country))
          %li
            %a{href: directory_index_path(@criteria[:country]), title: "List of Brazilian Jiu-Jitsu gyms in #{@criteria[:country]}"}= @criteria[:country]
          - if (@criteria.has_key?(:city))
            %li
              %a{href: directory_index_path(@criteria[:country], @criteria[:city]), title: "List of Brazilian Jiu-Jitsu gyms in #{seo_name}"}= @criteria[:city]
    .col-md-2
      = link_to wizard_locations_path(ref: 'directory_index'), class: 'btn btn-success' do
        %i.fa.fa-map-marker
        Create Academy
  .row
    .col-md-12
      = render partial: 'locations/directory_welcome_message'
  - if locations.present?
    .row
      .col-md-5
        .map-canvas{:style => 'height: 300px'}
      .col-md-7
        - if @criteria[:city].present?
          %h3= "Found #{pluralize(locations.count, 'academy')} near #{@criteria[:city]}, #{@criteria[:country]}"
        - else
          %h3= "Found #{pluralize(locations.count, 'academy')} in #{@criteria[:country]}"
        %span.small.text-info= "GPS: #{locations.first.gps}"
        %br/
        %br/
        %div
          %big= link_to "See on map view", root_path(zoom: Map::ZOOM_CITY, center: locations.first.to_coordinates), title: "See map of Brazilian Jiu-Jitsu gyms in #{seo_name}"
    %br/
    .row 
      .col-md-12
        = render partial: 'table', locals: { locations: locations }
  - else
    = render partial: 'directory_index'

= content_for(:scripts) do
  :coffeescript
    $(document).ready ->
      mapModel = new RollFindr.Models.Map(#{@map.to_json})
      mapView = new RollFindr.Views.MapView({ model: mapModel, el: $('.container')})
