= content_for(:head) do
  = stylesheet_link_tag "//www.fuelcdn.com/fuelux/3.4.0/css/fuelux.min.css"

= content_for(:scripts) do
  = javascript_include_tag "//www.fuelcdn.com/fuelux/3.4.0/js/fuelux.min.js"


- location = Location.new
- event = location.events.new
.container.page.create-event-dialog.fuelux
  .row.text-center.center-block
    %h1
      %i.fa.fa-calendar
      Create a Tournament/Seminar
  = form_for(event, html: { class: "editable form #{event_type_name(Event::EVENT_TYPE_TOURNAMENT)}" } ) do |f|
    .row
      .col-md-offset-2.col-md-8
        %input{type: 'hidden', name: 'location_id'}/
        = fields_for :event, event do |ff|
          = render partial: 'location_events/create_event', locals: { f: ff }
        = fields_for :location, location do |ff|
          = ff.hidden_field :loctype, value: Location::LOCATION_TYPE_EVENT_VENUE, class: 'form-control input-sm'
    .row.display-field
      .col-md-offset-2.col-md-8
        .form-group
          %label.control-label Address
          .input-group
            = text_field_tag('full_address', '', placeholder: 'eg. 123 Fourth St, Edmonton', class: 'street form-control input-lg')
            %a.btn.btn-default.input-group-addon{'data-address-search' => true}
              %span.fa-2x.fa.fa-search
    .row.edit-field
      .col-md-offset-2.col-md-8
        .form-group
          %label.control-label Address
          .input-group
            = select_tag('address_options', '', class: 'form-control input-lg')
            %a.btn.btn-default.input-group-addon{'data-cancel-edit' => true}
              %span.fa-2x.fa.fa-close
    .row.edit-field
      .col-md-offset-1.col-md-10
        %hr/
        %a{:name => 'addr-more'}
          %h4 Refine Address
    .row.edit-field
      .col-md-offset-1.col-md-3
        = fields_for :location, location do |ff|
          = ff.label :street, 'Street *', class: 'small'
          = ff.text_field :street, class: 'form-control input-sm'
          = ff.label :city, class: 'small'
          = ff.text_field :city, class: 'form-control input-sm'
          = ff.label :postal_code, 'Postal code *', class: 'small'
          = ff.text_field :postal_code, class: 'form-control input-sm'
      .col-md-3
        = fields_for :location, location do |ff|
          = ff.label :state, class: 'small'
          = ff.text_field :state, class: 'form-control input-sm'
          = ff.label :country, class: 'small'
          = ff.text_field :country, class: 'form-control input-sm'
        %br/
        %span.pull-left.small.clear *Denotes required field
        %br/
        %br/
        %a.pull-right.btn.btn-lg.btn-info.use-address{:href => '#'}
          %span.fa.fa-check
          Use Address
        %a.pull-right.btn.btn-lg.btn-default{'data-cancel-edit' => true}
          Cancel
      .col-md-4
        %h5 Use Existing Venue
        %div.nearby-locations
          .empty-message
            %i.text-muted There are no existing venues nearby.
          .content
            %ul.list-unstyled.items
    .row.edit-field
      .col-md-offset-1.col-md-10
        %hr/
        %h4 Map
        %div.map-canvas{:style => 'height: 250px'}
    .row.display-field
      .col-md-offset-2.col-md-8
        %button.btn.btn-success.pull-right{:type => :submit}
          %span.fa.fa-calendar
          Create Event

= content_for(:scripts) do
  :coffeescript
    $(document).ready ->
      wizardView = new RollFindr.Views.EventVenueWizardView()

