- title = "#{directory_segment.full_name} Brazilian Jiu-Jitsu"
= content_for :title do
  = title
.container.page.directory
  .row
    .col-md-12
      %h1
        = directory_segment.full_name
        %small BJJ academies and events
        %small
          %a{:href => map_path(segment: directory_segment.to_param, zoom: directory_segment.zoom, lat: directory_segment.lat, lng: directory_segment.lng, :ref => 'segment_city'), :title => "#{directory_segment.full_name} BJJ schools on the map"}
            %span.fa.fa-search-plus
            See larger map
  .row.hidden-xs
    .col-md-10
      = render partial: 'breadcrumb'
    .col-md-2.text-right.pull-right
      = render partial: 'create_location_button'
  .row
    .col-md-10
      = render partial: 'maps/map', locals: { height: 275, show_create: false }
    .col-md-2
      = render partial: 'maps/filter_list'
  .row
    - if directory_segment.child_segments.present?
      .col-md-3
        %h3 Other Cities in #{directory_segment.full_name}
        %ul.list-unstyled.list-inline
          - directory_segment.child_segments.sort.each do |city|
            %li= link_to city.name, directory_segment_path(country: directory_segment.name, city: city.name), title: "List of Brazilian Jiu-Jitsu gyms in #{directory_segment.full_name}" 
    - if Role.power(current_user.role) >= Role.power(Role::ROLE_MODERATOR)
      .col-md-9
        %h3 Moderation Notifications
        - directory_segment.notifications.each do |notification|
          = render partial: 'moderation_notifications/notification', object: notification


= content_for(:scripts) do
  = javascript_include_tag 'map'
  :coffeescript
    $(document).ready ->
      segmentModel = new RollFindr.Models.DirectorySegment(#{render_json(directory_segment)})
      mapModel = new RollFindr.Models.Map(#{render_json(map)})
      cityView = new RollFindr.Views.DirectorySegmentCountryView({ model: segmentModel, mapModel: mapModel, el: $('.directory') })

